
#Область ПрограммныйИнтерфейс

// Получить структуру таблиц проведения.
// 
// Параметры:
//  ДокументОбъект - ДокументОбъект
// 
// Возвращаемое значение:
//  Структура - Получить структуру таблиц проведения:
// * ПартииТоваров  - ТаблицаЗначений
// * КонтрольПартииТоваров  - ТаблицаЗначений 
// * Продажи - ТаблицаЗначений
// * ОстаткиТоваров - ТаблицаЗначений
// * КонтрольОстаткиТоваров - ТаблицаЗначений
Функция ПолучитьСтруктуруТаблицПроведения(ДокументОбъект) Экспорт  
	
	СтруктураТаблиц = Новый Структура; 
	
	Если ДокументОбъект.Движения.Найти("ПартииТоваров") <> Неопределено Тогда		
		СтруктураТаблиц.Вставить("ПартииТоваров", ДокументОбъект.Движения.ПартииТоваров.Выгрузить());
		СтруктураТаблиц.Вставить("КонтрольПартииТоваров", ДокументОбъект.Движения.ПартииТоваров.Выгрузить(,"Организация,Номенклатура,ПартияНоменклатуры"));		
	КонецЕсли;	
	
	Если ДокументОбъект.Движения.Найти("ОстаткиТоваров") <> Неопределено Тогда		
		СтруктураТаблиц.Вставить("ОстаткиТоваров", ДокументОбъект.Движения.ОстаткиТоваров.Выгрузить());
		СтруктураТаблиц.Вставить("КонтрольОстаткиТоваров", ДокументОбъект.Движения.ОстаткиТоваров.Выгрузить(,"Организация,Склад,Номенклатура"));		
	КонецЕсли;	
	
	Если ДокументОбъект.Движения.Найти("Продажи") <> Неопределено Тогда		
		СтруктураТаблиц.Вставить("Продажи", ДокументОбъект.Движения.Продажи.Выгрузить());		
	КонецЕсли;
	 
	Возврат СтруктураТаблиц;
	
КонецФункции

// Выполнить стандартный контроль.
// 
// Параметры:
//  СтруктураТаблиц - ТаблицаЗначений
//  ДокументОбъект - ДокументОбъект 
// 
// Возвращаемое значение:
//  Структура - Выполнить стандартный контроль:
// * Ошибка - Булево - 
// * ТекстОшибки - Строка - 
Функция ВыполнитьСтандартныйКонтроль(СтруктураТаблиц, ДокументОбъект = Неопределено) Экспорт
	
		РезультатКонтроля = Новый Структура("Ошибка, ТекстОшибки", Ложь, "");
	
		Если СтруктураТаблиц.Свойство("КонтрольПартииТоваров") И СтруктураТаблиц.КонтрольПартииТоваров.Количество() Тогда
			КонтрольПартийТоваров(СтруктураТаблиц.КонтрольПартииТоваров, РезультатКонтроля, ДокументОбъект);
		КонецЕсли;
		
		Если СтруктураТаблиц.Свойство("КонтрольОстаткиТоваров") И СтруктураТаблиц.КонтрольОстаткиТоваров.Количество() Тогда
			КонтрольОстатковТоваров(СтруктураТаблиц.КонтрольОстаткиТоваров, РезультатКонтроля, ДокументОбъект);
		КонецЕсли;
		
		Возврат РезультатКонтроля;
	
КонецФункции	

// Добавить стандартные движения.
// 
// Параметры:
//  ДокументОбъект - ДокументОбъект
//  СтруктураТаблиц - ТаблицаЗначений
//  ОтменаПроведения - Булево
Процедура ДобавитьСтандартныеДвижения(ДокументОбъект, СтруктураТаблиц, ОтменаПроведения = Ложь) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПриобретениеТоваровИУслуг") Тогда
		ТаблицаДанныхДокумента = ПолучитьТаблицуДанныхПоступления(ДокументОбъект);
		Если ОтменаПроведения Тогда
			ДобавитьДвиженияОтменыПоступление(ДокументОбъект, СтруктураТаблиц, ТаблицаДанныхДокумента);
		Иначе	
			ДобавитьДвиженияПоступление(ДокументОбъект, СтруктураТаблиц, ТаблицаДанныхДокумента);
		КонецЕсли;	
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РеализацияТоваровИУслуг") Тогда
		ТаблицаДанныхДокумента = ПолучитьТаблицуДанныхРасход(ДокументОбъект);
		Если ОтменаПроведения Тогда
			ДобавитьДвиженияОтменыРасход(ДокументОбъект, СтруктураТаблиц, ТаблицаДанныхДокумента);
		Иначе	
			ДобавитьДвиженияРасход(ДокументОбъект, СтруктураТаблиц, ТаблицаДанныхДокумента);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

// Установить стандартные блокировки.
// 
// Параметры:
//  БлокировкаДанных - БлокировкаДанных
//  СтруктураТаблиц - ТаблицаЗначений
// 
Процедура УстановитьСтандартныеБлокировки(БлокировкаДанных, СтруктураТаблиц) Экспорт
	
	Если СтруктураТаблиц.Свойство("ПартииТоваров") И СтруктураТаблиц.ПартииТоваров.Количество() Тогда

	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуДанныхПоступления(ДокументОбъект) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриобретениеТоваровИУслугТовары.Ссылка,
	|	ПриобретениеТоваровИУслугТовары.Ссылка.Дата,
	|	ПриобретениеТоваровИУслугТовары.Ссылка.Организация,
	|	ПриобретениеТоваровИУслугТовары.Номенклатура,
	|	ПриобретениеТоваровИУслугТовары.Номенклатура.Тип КАК ТипНоменклатуры,
	|	ПриобретениеТоваровИУслугТовары.Склад,
	|	ПриобретениеТоваровИУслугТовары.Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровИУслуг.Товары КАК ПриобретениеТоваровИУслугТовары
	|ГДЕ
	|	ПриобретениеТоваровИУслугТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьТаблицуДанныхРасход(ДокументОбъект) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровИУслугТовары.Ссылка,
	|	РеализацияТоваровИУслугТовары.Ссылка.Дата,
	|	РеализацияТоваровИУслугТовары.Ссылка.Организация,
	|	РеализацияТоваровИУслугТовары.Номенклатура,
	|	РеализацияТоваровИУслугТовары.Номенклатура.Тип КАК ТипНоменклатуры,
	|	РеализацияТоваровИУслугТовары.Склад,
	|	РеализацияТоваровИУслугТовары.Подразделение,
	|	РеализацияТоваровИУслугТовары.Количество
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|ГДЕ
	|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	

Процедура ДобавитьДвиженияПоступление(ДокументОбъект, СтруктураТаблиц, ТаблицаДанныхДокумента)
	
	Для Каждого СтрокаТовары Из ТаблицаДанныхДокумента Цикл			
			Если СтрокаТовары.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда
			//Партии
			НовоеДвижение = СтруктураТаблиц.ПартииТоваров.Добавить();
			НовоеДвижение.Активность = Истина;
			НовоеДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
			НовоеДвижение.Период = СтрокаТовары.Дата;
			НовоеДвижение.Организация = СтрокаТовары.Организация;
			НовоеДвижение.Номенклатура = СтрокаТовары.Номенклатура;
			НовоеДвижение.ПартияНоменклатуры = СтрокаТовары.Ссылка;
			НовоеДвижение.Количество = СтрокаТовары.Количество;
		
			//контроль остатков партий
			НовыйКонтроль = СтруктураТаблиц.КонтрольПартииТоваров.Добавить();
			НовыйКонтроль.Организация = СтрокаТовары.Организация;
			НовыйКонтроль.Номенклатура = СтрокаТовары.Номенклатура;
			НовыйКонтроль.ПартияНоменклатуры = СтрокаТовары.Ссылка;
			
			//Остатки
			НовоеДвижение = СтруктураТаблиц.ОстаткиТоваров.Добавить();
			НовоеДвижение.Активность = Истина;
			НовоеДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;			
			НовоеДвижение.Период = СтрокаТовары.Дата;
			НовоеДвижение.Организация = СтрокаТовары.Организация;
			НовоеДвижение.Склад = СтрокаТовары.Склад;
			НовоеДвижение.Номенклатура = СтрокаТовары.Номенклатура;
			НовоеДвижение.Количество = СтрокаТовары.Количество;
		
			//контроль остатков
			НовыйКонтроль = СтруктураТаблиц.КонтрольОстаткиТоваров.Добавить();
			НовыйКонтроль.Организация = СтрокаТовары.Организация;
			НовыйКонтроль.Склад = СтрокаТовары.Склад;
			НовыйКонтроль.Номенклатура = СтрокаТовары.Номенклатура;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураТаблиц.ПартииТоваров.Свернуть("Активность,ВидДвижения,Период,Организация,Номенклатура,ПартияНоменклатуры","Количество");
	СтруктураТаблиц.КонтрольПартииТоваров.Свернуть("Организация,Номенклатура,ПартияНоменклатуры");
	СтруктураТаблиц.ОстаткиТоваров.Свернуть("Активность,ВидДвижения,Период,Организация,Склад,Номенклатура","Количество");
	СтруктураТаблиц.КонтрольОстаткиТоваров.Свернуть("Организация,Склад,Номенклатура");
	
	ДокументОбъект.Движения.ОстаткиТоваров.Загрузить(СтруктураТаблиц.ОстаткиТоваров);
	ДокументОбъект.Движения.ПартииТоваров.Загрузить(СтруктураТаблиц.ПартииТоваров);
	
КонецПроцедуры

Процедура ДобавитьДвиженияРасход(ДокументОбъект, СтруктураТаблиц, ТаблицаДанныхДокумента)
	
	Для Каждого СтрокаТовары Из ТаблицаДанныхДокумента Цикл
		Если СтрокаТовары.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда
			//Остатки
			НовоеДвижение = СтруктураТаблиц.ОстаткиТоваров.Добавить();
			НовоеДвижение.Активность = Истина;
			НовоеДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
			НовоеДвижение.Период = СтрокаТовары.Дата;
			НовоеДвижение.Организация = СтрокаТовары.Организация;
			НовоеДвижение.Склад = СтрокаТовары.Склад;
			НовоеДвижение.Номенклатура = СтрокаТовары.Номенклатура;
			НовоеДвижение.Количество = СтрокаТовары.Количество;
		
			//контроль остатков
			НовыйКонтроль = СтруктураТаблиц.КонтрольОстаткиТоваров.Добавить();
			НовыйКонтроль.Организация = СтрокаТовары.Организация;
			НовыйКонтроль.Склад = СтрокаТовары.Склад;
			НовыйКонтроль.Номенклатура = СтрокаТовары.Номенклатура;
		КонецЕсли;
		//Продажи
		НовоеДвижение = СтруктураТаблиц.Продажи.Добавить();
		НовоеДвижение.Активность = Истина;
		НовоеДвижение.Период = СтрокаТовары.Дата;
		НовоеДвижение.Номенклатура = СтрокаТовары.Номенклатура;
		НовоеДвижение.Подразделение = СтрокаТовары.Подразделение;
		НовоеДвижение.Количество = СтрокаТовары.Количество;

	КонецЦикла;
	
	СтруктураТаблиц.ОстаткиТоваров.Свернуть("Активность,ВидДвижения,Период,Организация,Склад,Номенклатура","Количество");
	СтруктураТаблиц.КонтрольОстаткиТоваров.Свернуть("Организация,Склад,Номенклатура");
	СтруктураТаблиц.Продажи.Свернуть("Активность,Период,Номенклатура,Подразделение","Количество");	
	
	ДокументОбъект.Движения.ОстаткиТоваров.Загрузить(СтруктураТаблиц.ОстаткиТоваров);
	ДокументОбъект.Движения.Продажи.Загрузить(СтруктураТаблиц.Продажи);
		
КонецПроцедуры


Процедура ДобавитьДвиженияОтменыПоступление(ДокументОбъект, СтруктураТаблиц, ТаблицаДанныхДокумента)
	
	Для Каждого СтрокаТовары Из ТаблицаДанныхДокумента Цикл			
			Если СтрокаТовары.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда					
			//контроль остатков партий
			НовыйКонтроль = СтруктураТаблиц.КонтрольПартииТоваров.Добавить();
			НовыйКонтроль.Организация = СтрокаТовары.Организация;
			НовыйКонтроль.Номенклатура = СтрокаТовары.Номенклатура;
			НовыйКонтроль.ПартияНоменклатуры = СтрокаТовары.Ссылка;
			
			//контроль остатков
			НовыйКонтроль = СтруктураТаблиц.КонтрольОстаткиТоваров.Добавить();
			НовыйКонтроль.Организация = ДокументОбъект.Организация;
			НовыйКонтроль.Склад = СтрокаТовары.Склад;
			НовыйКонтроль.Номенклатура = СтрокаТовары.Номенклатура;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураТаблиц.КонтрольПартииТоваров.Свернуть("Организация,Номенклатура,ПартияНоменклатуры");
	СтруктураТаблиц.КонтрольОстаткиТоваров.Свернуть("Организация,Склад,Номенклатура");
	
КонецПроцедуры

Процедура ДобавитьДвиженияОтменыРасход(ДокументОбъект, СтруктураТаблиц, ТаблицаДанныхДокумента)
	Возврат;		
КонецПроцедуры

Процедура КонтрольОстатковТоваров(ТаблицаКонтроля, РезультатКонтроля, ДокументОбъект = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаКонтроля.Организация КАК Организация,
	|	ТаблицаКонтроля.Склад КАК Склад,
	|	ТаблицаКонтроля.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втКонтроля
	|ИЗ
	|	&ТаблицаКонтроля КАК ТаблицаКонтроля
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Склад,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТоваровОстатки.Организация,
	|	ОстаткиТоваровОстатки.Склад,
	|	ОстаткиТоваровОстатки.Номенклатура,
	|	ОстаткиТоваровОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ОстаткиТоваров.Остатки КАК ОстаткиТоваровОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКонтроля КАК втКонтроля
	|		ПО ОстаткиТоваровОстатки.Организация = втКонтроля.Организация
	|		И ОстаткиТоваровОстатки.Склад = втКонтроля.Склад
	|		И ОстаткиТоваровОстатки.Номенклатура = втКонтроля.Номенклатура
	|ГДЕ
	|	ОстаткиТоваровОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("ТаблицаКонтроля", ТаблицаКонтроля);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		 РезультатКонтроля.Ошибка = Истина;
		 
		 Если ПустаяСтрока(РезультатКонтроля.ТекстОшибки) Тогда
		 	ТекстСообщения = НСтр("ru = 'Номенклатура %1: недостаточно свободного остатка по организации %2 на %3. (кол. :%4)'");
		 Иначе
		 	ТекстСообщения = Символы.ПС + НСтр("ru = 'Номенклатура %1: недостаточно свободного остатка по организации %2 на %3. (кол. :%4)'");	
		 КонецЕсли;	
		 	
		 ТекстСообщения = СтрШаблон(ТекстСообщения, Строка(Выборка.Номенклатура),
		 	Строка(Выборка.Организация),
		 	Строка(Выборка.Склад),
		 	Строка(Выборка.КоличествоОстаток));
		 	
		 РезультатКонтроля.ТекстОшибки = РезультатКонтроля.ТекстОшибки + ТекстСообщения;	
		 	
	КонецЦикла;	
	
КонецПроцедуры

Процедура КонтрольПартийТоваров(ТаблицаКонтроля, РезультатКонтроля, ДокументОбъект = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаКонтроля.Организация КАК Организация,
	|	ТаблицаКонтроля.Номенклатура КАК Номенклатура,
	|	ТаблицаКонтроля.ПартияНоменклатуры КАК ПартияНоменклатуры
	|ПОМЕСТИТЬ втКонтроля
	|ИЗ
	|	&ТаблицаКонтроля КАК ТаблицаКонтроля
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура,
	|	ПартияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровОстатки.Организация,
	|	ПартииТоваровОстатки.Номенклатура,
	|	ПартииТоваровОстатки.ПартияНоменклатуры,
	|	ПартииТоваровОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ПартииТоваров.Остатки КАК ПартииТоваровОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКонтроля КАК втКонтроля
	|		ПО ПартииТоваровОстатки.Организация = втКонтроля.Организация
	|		И ПартииТоваровОстатки.Номенклатура = втКонтроля.Номенклатура
	|		И ПартииТоваровОстатки.ПартияНоменклатуры = втКонтроля.ПартияНоменклатуры
	|ГДЕ
	|	ПартииТоваровОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("ТаблицаКонтроля", ТаблицаКонтроля);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		 РезультатКонтроля.Ошибка = Истина;
		 
		 Если ПустаяСтрока(РезультатКонтроля.ТекстОшибки) Тогда
		 	ТекстСообщения = НСтр("ru = 'Номенклатура %1(Партия: %2): недостаточно свободного остатка по организации %3. (кол. :%4)'");
		 Иначе
		 	ТекстСообщения = Символы.ПС + НСтр("ru = 'Номенклатура %1(Партия: %2): недостаточно свободного остатка по организации %3. (кол. :%4)'");	
		 КонецЕсли;	
		 	
		 ТекстСообщения = СтрШаблон(ТекстСообщения, Строка(Выборка.Номенклатура),
		 	Строка(Выборка.ПартияНоменклатуры),
		 	Строка(Выборка.Организация),
		 	Строка(Выборка.КоличествоОстаток));
		 	
		 РезультатКонтроля.ТекстОшибки = РезультатКонтроля.ТекстОшибки + ТекстСообщения;	
		 	
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти	
